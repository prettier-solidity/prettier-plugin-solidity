// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeDefinition.sol format 1`] = `
====================================options=====================================
parsers: ["solidity-parse"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
pragma solidity ^0.8.8;

    type Hello is uint;

contract TypeDefinition {
    event Moon(Hello world);

        function demo(Hello world) public {
        world = Hello.wrap(Hello.unwrap(world) + 1337);
        emit Moon(world);
    }
}


=====================================output=====================================
pragma solidity ^0.8.8;

type Hello is uint256;

contract TypeDefinition {
    event Moon(Hello world);

    function demo(Hello world) public {
        world = Hello.wrap(Hello.unwrap(world) + 1337);
        emit Moon(world);
    }
}

================================================================================
`;

exports[`TypeDefinition.sol format 1`] = `
====================================options=====================================
parsers: ["solidity-parse"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
pragma solidity ^0.8.8;

    type Hello is uint;

contract TypeDefinition {
    event Moon(Hello world);

        function demo(Hello world) public {
        world = Hello.wrap(Hello.unwrap(world) + 1337);
        emit Moon(world);
    }
}

=====================================output=====================================
pragma solidity ^0.8.8;

type Hello is uint256;

contract TypeDefinition {
    event Moon(Hello world);

    function demo(Hello world) public {
        world = Hello.wrap(Hello.unwrap(world) + 1337);
        emit Moon(world);
    }
}

================================================================================
`;
